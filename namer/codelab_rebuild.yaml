name: Your first Flutter app (updated for 2023)
steps:
  - name: step_03
    steps:
      - name: Remove generated code
        rmdir: step_03
      - name: Create project
        flutter: create namer_app
      - name: Strip DEVELOPMENT_TEAM
        strip-lines-containing: DEVELOPMENT_TEAM =
        path: namer_app/ios/Runner.xcodeproj/project.pbxproj
      - name: Replace pubspec.yaml
        path: namer_app/pubspec.yaml
        replace-contents: |
          name: namer_app
          description: A new Flutter project.

          publish_to: 'none' # Remove this line if you wish to publish to pub.dev

          version: 0.0.1+1

          environment:
            sdk: ^3.5.1

          dependencies:
            flutter:
              sdk: flutter

            english_words: ^4.0.0
            provider: ^6.1.2

          dev_dependencies:
            flutter_test:
              sdk: flutter

            flutter_lints: ^4.0.0

          flutter:
            uses-material-design: true
      - name: Update dependencies
        path: namer_app
        flutter: pub upgrade --major-versions
      - name: Replace analysis_options.yaml
        path: namer_app/analysis_options.yaml
        replace-contents: |
          include: package:flutter_lints/flutter.yaml

          linter:
            rules:
              avoid_print: false
              prefer_const_constructors_in_immutables: false
              prefer_const_constructors: false
              prefer_const_literals_to_create_immutables: false
              prefer_final_fields: false
              unnecessary_breaks: true
              use_key_in_widget_constructors: false

      - name: Replace lib/main.dart
        path: namer_app/lib/main.dart
        replace-contents: |
          import 'package:english_words/english_words.dart';
          import 'package:flutter/material.dart';
          import 'package:provider/provider.dart';

          void main() {
            runApp(MyApp());
          }

          class MyApp extends StatelessWidget {
            const MyApp({super.key});

            @override
            Widget build(BuildContext context) {
              return ChangeNotifierProvider(
                create: (context) => MyAppState(),
                child: MaterialApp(
                  title: 'Namer App',
                  theme: ThemeData(
                    useMaterial3: true,
                    colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepOrange),
                  ),
                  home: MyHomePage(),
                ),
              );
            }
          }

          class MyAppState extends ChangeNotifier {
            var current = WordPair.random();
          }

          class MyHomePage extends StatelessWidget {
            @override
            Widget build(BuildContext context) {
              var appState = context.watch<MyAppState>();

              return Scaffold(
                body: Column(
                  children: [
                    Text('A random idea:'),
                    Text(appState.current.asLowerCase),
                  ],
                ),
              );
            }
          }
      - name: Remove README
        rm: namer_app/README.md
      - name: Replace test/widget_test.dart
        path: namer_app/test/widget_test.dart
        replace-contents: |
          import 'package:flutter_test/flutter_test.dart';

          import 'package:namer_app/main.dart';

          void main() {
            testWidgets('App starts', (WidgetTester tester) async {
              await tester.pumpWidget(const MyApp());
              expect(find.text('A random idea:'), findsOneWidget);
            });
          }
      - name: Build iOS simulator bundle
        platforms: [ macos ]
        path: namer_app
        flutter: build ios --simulator
      - name: Build macOS app
        platforms: [ macos ]
        path: namer_app
        flutter: build macos
      - name: Build Linux app
        platforms: [ linux ]
        path: namer_app
        flutter: build linux
      - name: Build Windows app
        platforms: [ windows ]
        path: namer_app
        flutter: build windows
      - name: Copy step_03
        copydir:
          from: namer_app
          to: step_03
      - name: Flutter clean
        path: step_03
        flutter: clean
  - name: step_04_a_widget
    steps:
      - name: Remove generated code
        rmdir: step_04_a_widget
      - name: Add button code
        path: namer_app/lib/main.dart
        patch-u: |
          --- b/namer/step_04_a_widget/lib/main.dart
          +++ a/namer/step_04_a_widget/lib/main.dart
          @@ -37,8 +37,14 @@ class MyHomePage extends StatelessWidget {
               return Scaffold(
                 body: Column(
                   children: [
          -          Text('A random idea:'),
          +          Text('A random AWESOME idea:'),
                     Text(appState.current.asLowerCase),
          +          ElevatedButton(
          +            onPressed: () {
          +              print('button pressed!');
          +            },
          +            child: Text('Next'),
          +          ),
                   ],
                 ),
               );
      - name: Patch test/widget_test.dart
        path: namer_app/test/widget_test.dart
        patch-u: |
          --- b/namer/step_04_a_widget/test/widget_test.dart
          +++ a/namer/step_04_a_widget/test/widget_test.dart
          @@ -5,6 +5,6 @@ import 'package:namer_app/main.dart';
           void main() {
             testWidgets('App starts', (WidgetTester tester) async {
               await tester.pumpWidget(const MyApp());
          -    expect(find.text('A random idea:'), findsOneWidget);
          +    expect(find.text('A random AWESOME idea:'), findsOneWidget);
             });
           }
      - name: Copy step_04_a_widget
        copydir:
          from: namer_app 
          to: step_04_a_widget
  - name: step_04_b_behavior
    steps:
      - name: Remove generated code
        rmdir: step_04_b_behavior
      - name: Add button behavior
        path: namer_app/lib/main.dart
        patch-u: |
          --- a/namer_app/lib/main.dart
          +++ b/namer_app/lib/main.dart
          @@ -27,6 +27,11 @@ class MyApp extends StatelessWidget {

           class MyAppState extends ChangeNotifier {
             var current = WordPair.random();
          +
          +  void getNext() {
          +    current = WordPair.random();
          +    notifyListeners();
          +  }
           }

           class MyHomePage extends StatelessWidget {
          @@ -41,7 +46,7 @@ class MyHomePage extends StatelessWidget {
                     Text(appState.current.asLowerCase),
                     ElevatedButton(
                       onPressed: () {
          -              print('button pressed!');
          +              appState.getNext();
                       },
                       child: Text('Next'),
                     ),
      - name: Add additional test
        path: namer_app/test/widget_test.dart
        patch-u: |
          --- a/namer_app/test/widget_test.dart
          +++ b/namer_app/test/widget_test.dart
          @@ -1,3 +1,4 @@
          +import 'package:flutter/material.dart';
           import 'package:flutter_test/flutter_test.dart';
           
           import 'package:namer_app/main.dart';
          @@ -6,5 +7,45 @@
             testWidgets('App starts', (WidgetTester tester) async {
               await tester.pumpWidget(const MyApp());
               expect(find.text('A random AWESOME idea:'), findsOneWidget);
          +  });
          +
          +  testWidgets('Tapping button changes word pair', (WidgetTester tester) async {
          +    await tester.pumpWidget(const MyApp());
          +
          +    String findWordPair() {
          +      final wordPairTextWidget = tester
          +          // Get all Text widgets...
          +          .widgetList<Text>(find.byType(Text))
          +          // ... skip one ('A random AWESOME idea:') ...
          +          .skip(1)
          +          // ... and take the first after it.
          +          .first;
          +      return wordPairTextWidget.data!;
          +    }
          +
          +    // Tap several times and keep a list of word pair values.
          +    const tryCount = 5;
          +    final pairs = <String>[
          +      findWordPair(),
          +    ];
          +    for (var i = 1; i < tryCount; i++) {
          +      await tester.tap(find.text('Next'));
          +      await tester.pumpAndSettle();
          +      pairs.add(findWordPair());
          +    }
          +
          +    expect(
          +      // Converting the list to a set to remove duplicates.
          +      pairs.toSet(),
          +      // An occassional duplicate word pair is okay and expected.
          +      // We only fail this test when there is zero variance - all the
          +      // word pairs are the same, even though we clicked 'Next' several times.
          +      hasLength(greaterThan(1)),
          +      reason: 'After clicking $tryCount times, '
          +          'the app should have generated at least two different word pairs. '
          +          'Instead, the app showed these: $pairs. '
          +          'That almost certainly means that the word pair is not being '
          +          'randomly generated at all. The button does not work.',
          +    );
             });
           }
      - name: Copy step_04_b_behavior
        copydir:
          from: namer_app 
          to: step_04_b_behavior
  - name: step_05_a_pair
    steps:
      - name: Remove generated code
        rmdir: step_05_a_pair
      - name: Introduce pair variable
        path: namer_app/lib/main.dart
        patch-u: |
          --- b/namer/step_05_a_pair/lib/main.dart
          +++ a/namer/step_05_a_pair/lib/main.dart
          @@ -38,12 +38,13 @@ class MyHomePage extends StatelessWidget {
             @override
             Widget build(BuildContext context) {
               var appState = context.watch<MyAppState>();
          +    var pair = appState.current;
           
               return Scaffold(
                 body: Column(
                   children: [
                     Text('A random AWESOME idea:'),
          -          Text(appState.current.asLowerCase),
          +          Text(pair.asLowerCase),
                     ElevatedButton(
                       onPressed: () {
                         appState.getNext();
      - name: Copy step_05_a_pair
        copydir:
          from: namer_app 
          to: step_05_a_pair
  - name: step_05_b_extract
    steps:
      - name: Remove generated code
        rmdir: step_05_b_extract
      - name: Extract BigCard
        path: namer_app/lib/main.dart
        patch-u: |
          --- b/namer/step_05_b_extract/lib/main.dart
          +++ a/namer/step_05_b_extract/lib/main.dart
          @@ -44,7 +44,7 @@ class MyHomePage extends StatelessWidget {
                 body: Column(
                   children: [
                     Text('A random AWESOME idea:'),
          -          Text(pair.asLowerCase),
          +          BigCard(pair: pair),
                     ElevatedButton(
                       onPressed: () {
                         appState.getNext();
          @@ -56,3 +56,17 @@ class MyHomePage extends StatelessWidget {
               );
             }
           }
          +
          +class BigCard extends StatelessWidget {
          +  const BigCard({
          +    super.key,
          +    required this.pair,
          +  });
          +
          +  final WordPair pair;
          +
          +  @override
          +  Widget build(BuildContext context) {
          +    return Text(pair.asLowerCase);
          +  }
          +}
      - name: Update test to use BigCard
        path: namer_app/test/widget_test.dart
        patch-u: |
          --- a/namer_app/test/widget_test.dart
          +++ b/namer_app/test/widget_test.dart
          @@ -13,13 +13,10 @@ void main() {
               await tester.pumpWidget(const MyApp());
           
               String findWordPair() {
          -      final wordPairTextWidget = tester
          -          // Get all Text widgets...
          -          .widgetList<Text>(find.byType(Text))
          -          // ... skip one ('A random AWESOME idea:') ...
          -          .skip(1)
          -          // ... and take the first after it.
          -          .first;
          +      final wordPairTextWidget = tester.widget<Text>(find.descendant(
          +        of: find.byType(BigCard),
          +        matching: find.byType(Text),
          +      ));
                 return wordPairTextWidget.data!;
               }
      - name: Copy step_05_b_extract
        copydir:
          from: namer_app 
          to: step_05_b_extract
  - name: step_05_c_card_padding
    steps:
      - name: Remove generated code
        rmdir: step_05_c_card_padding
      - name: Add Card and Padding
        path: namer_app/lib/main.dart
        patch-u: |
          --- a/namer_app/lib/main.dart
          +++ b/namer_app/lib/main.dart
          @@ -67,6 +67,11 @@ class BigCard extends StatelessWidget {
           
             @override
             Widget build(BuildContext context) {
          -    return Text(pair.asLowerCase);
          +    return Card(
          +      child: Padding(
          +        padding: const EdgeInsets.all(20),
          +        child: Text(pair.asLowerCase),
          +      ),
          +    );
             }
           }
      - name: Copy step_05_c_card_padding
        copydir:
          from: namer_app 
          to: step_05_c_card_padding
  - name: step_05_d_theme
    steps:
      - name: Remove generated code
        rmdir: step_05_d_theme
      - name: Add Theme
        path: namer_app/lib/main.dart
        patch-u: |
          --- a/namer_app/lib/main.dart
          +++ b/namer_app/lib/main.dart
          @@ -67,7 +67,10 @@ class BigCard extends StatelessWidget {
           
             @override
             Widget build(BuildContext context) {
          +    final theme = Theme.of(context);
          +
               return Card(
          +      color: theme.colorScheme.primary,
                 child: Padding(
                   padding: const EdgeInsets.all(20),
                   child: Text(pair.asLowerCase),
      - name: Copy step_05_d_theme
        copydir:
          from: namer_app 
          to: step_05_d_theme
  - name: step_05_e_text_style
    steps:
      - name: Remove generated code
        rmdir: step_05_e_text_style
      - name: Add textStyle
        path: namer_app/lib/main.dart
        patch-u: |
          --- a/namer_app/lib/main.dart
          +++ b/namer_app/lib/main.dart
          @@ -68,12 +68,15 @@ class BigCard extends StatelessWidget {
             @override
             Widget build(BuildContext context) {
               final theme = Theme.of(context);
          +    final style = theme.textTheme.displayMedium!.copyWith(
          +      color: theme.colorScheme.onPrimary,
          +    );
           
               return Card(
                 color: theme.colorScheme.primary,
                 child: Padding(
                   padding: const EdgeInsets.all(20),
          -        child: Text(pair.asLowerCase),
          +        child: Text(pair.asLowerCase, style: style),
                 ),
               );
             }
      - name: Copy step_05_e_text_style
        copydir:
          from: namer_app 
          to: step_05_e_text_style
  - name: step_05_f_accessibility
    steps:
      - name: Remove generated code
        rmdir: step_05_f_accessibility
      - name: Add semanticsLabel
        path: namer_app/lib/main.dart
        patch-u: |
          --- a/namer_app/lib/main.dart
          +++ b/namer_app/lib/main.dart
          @@ -76,7 +76,11 @@ class BigCard extends StatelessWidget {
                 color: theme.colorScheme.primary,
                 child: Padding(
                   padding: const EdgeInsets.all(20),
          -        child: Text(pair.asLowerCase, style: style),
          +        child: Text(
          +          pair.asLowerCase,
          +          style: style,
          +          semanticsLabel: "${pair.first} ${pair.second}",
          +        ),
                 ),
               );
             }
      - name: Copy step_05_f_accessibility
        copydir:
          from: namer_app 
          to: step_05_f_accessibility
  - name: step_05_g_center_vertical
    steps:
      - name: Remove generated code
        rmdir: step_05_g_center_vertical
      - name: Center column vertically
        path: namer_app/lib/main.dart
        patch-u: |
          --- b/namer/step_05_g_center_vertical/lib/main.dart
          +++ a/namer/step_05_g_center_vertical/lib/main.dart
          @@ -42,6 +42,7 @@ class MyHomePage extends StatelessWidget {
           
               return Scaffold(
                 body: Column(
          +        mainAxisAlignment: MainAxisAlignment.center,
                   children: [
                     Text('A random AWESOME idea:'),
                     BigCard(pair: pair),
      - name: Copy step_05_g_center_vertical
        copydir:
          from: namer_app 
          to: step_05_g_center_vertical
  - name: step_05_h_center_horizontal
    steps:
      - name: Remove generated code
        rmdir: step_05_h_center_horizontal
      - name: Center column horizontally
        path: namer_app/lib/main.dart
        patch-u: |
          --- b/namer/step_05_h_center_horizontal/lib/main.dart
          +++ a/namer/step_05_h_center_horizontal/lib/main.dart
          @@ -41,18 +41,20 @@ class MyHomePage extends StatelessWidget {
               var pair = appState.current;
           
               return Scaffold(
          -      body: Column(
          -        mainAxisAlignment: MainAxisAlignment.center,
          -        children: [
          -          Text('A random AWESOME idea:'),
          -          BigCard(pair: pair),
          -          ElevatedButton(
          -            onPressed: () {
          -              appState.getNext();
          -            },
          -            child: Text('Next'),
          -          ),
          -        ],
          +      body: Center(
          +        child: Column(
          +          mainAxisAlignment: MainAxisAlignment.center,
          +          children: [
          +            Text('A random AWESOME idea:'),
          +            BigCard(pair: pair),
          +            ElevatedButton(
          +              onPressed: () {
          +                appState.getNext();
          +              },
          +              child: Text('Next'),
          +            ),
          +          ],
          +        ),
                 ),
               );
             }
      - name: Copy step_05_h_center_horizontal
        copydir:
          from: namer_app 
          to: step_05_h_center_horizontal
  - name: step_05_i_optional_changes
    steps:
      - name: Remove generated code
        rmdir: step_05_i_optional_changes
      - name: Remove text, add SizedBox
        path: namer_app/lib/main.dart
        patch-u: |
          --- a/namer_app/lib/main.dart
          +++ b/namer_app/lib/main.dart
          @@ -45,8 +45,8 @@ class MyHomePage extends StatelessWidget {
                   child: Column(
                     mainAxisAlignment: MainAxisAlignment.center,
                     children: [
          -            Text('A random AWESOME idea:'),
                       BigCard(pair: pair),
          +            SizedBox(height: 10),
                       ElevatedButton(
                         onPressed: () {
                           appState.getNext();
      - name: Update test
        path: namer_app/test/widget_test.dart
        patch-u: |
          --- a/namer_app/test/widget_test.dart
          +++ b/namer_app/test/widget_test.dart
          @@ -6,7 +6,7 @@ import 'package:namer_app/main.dart';
           void main() {
             testWidgets('App starts', (WidgetTester tester) async {
               await tester.pumpWidget(const MyApp());
          -    expect(find.text('A random AWESOME idea:'), findsOneWidget);
          +    expect(find.text('Next'), findsOneWidget);
             });
           
             testWidgets('Tapping button changes word pair', (WidgetTester tester) async {
      - name: Copy step_05_i_optional_changes
        copydir:
          from: namer_app 
          to: step_05_i_optional_changes
  - name: step_06_a_business_logic
    steps:
      - name: Remove generated code
        rmdir: step_06_a_business_logic
      - name: Add 'Like' button business logic
        path: namer_app/lib/main.dart
        patch-u: |
          --- a/namer_app/lib/main.dart
          +++ b/namer_app/lib/main.dart
          @@ -32,6 +32,17 @@ class MyAppState extends ChangeNotifier {
               current = WordPair.random();
               notifyListeners();
             }
          +
          +  var favorites = <WordPair>[];
          +
          +  void toggleFavorite() {
          +    if (favorites.contains(current)) {
          +      favorites.remove(current);
          +    } else {
          +      favorites.add(current);
          +    }
          +    notifyListeners();
          +  }
           }
           
           class MyHomePage extends StatelessWidget {
      - name: Copy step_06_a_business_logic
        copydir:
          from: namer_app 
          to: step_06_a_business_logic
  - name: step_06_b_add_row
    steps:
      - name: Remove generated code
        rmdir: step_06_b_add_row
      - name: Add row for buttons
        path: namer_app/lib/main.dart
        patch-u: |
          --- a/namer_app/lib/main.dart
          +++ b/namer_app/lib/main.dart
          @@ -58,11 +58,16 @@ class MyHomePage extends StatelessWidget {
                     children: [
                       BigCard(pair: pair),
                       SizedBox(height: 10),
          -            ElevatedButton(
          -              onPressed: () {
          -                appState.getNext();
          -              },
          -              child: Text('Next'),
          +            Row(
          +              mainAxisSize: MainAxisSize.min,
          +              children: [
          +                ElevatedButton(
          +                  onPressed: () {
          +                    appState.getNext();
          +                  },
          +                  child: Text('Next'),
          +                ),
          +              ],
                       ),
                     ],
                   ),
      - name: Copy step_06_b_add_row
        copydir:
          from: namer_app 
          to: step_06_b_add_row
  - name: step_06_c_add_like_button
    steps:
      - name: Remove generated code
        rmdir: step_06_c_add_like_button
      - name: Add 'Like' button to UI
        path: namer_app/lib/main.dart
        patch-u: |
          --- a/namer_app/lib/main.dart
          +++ b/namer_app/lib/main.dart
          @@ -51,6 +51,13 @@ class MyHomePage extends StatelessWidget {
               var appState = context.watch<MyAppState>();
               var pair = appState.current;
           
          +    IconData icon;
          +    if (appState.favorites.contains(pair)) {
          +      icon = Icons.favorite;
          +    } else {
          +      icon = Icons.favorite_border;
          +    }
          +
               return Scaffold(
                 body: Center(
                   child: Column(
          @@ -61,6 +68,14 @@ class MyHomePage extends StatelessWidget {
                       Row(
                         mainAxisSize: MainAxisSize.min,
                         children: [
          +                ElevatedButton.icon(
          +                  onPressed: () {
          +                    appState.toggleFavorite();
          +                  },
          +                  icon: Icon(icon),
          +                  label: Text('Like'),
          +                ),
          +                SizedBox(width: 10),
                           ElevatedButton(
                             onPressed: () {
                               appState.getNext();
      - name: Add test to check 'Like' button
        path: namer_app/test/widget_test.dart
        patch-u: |
          --- a/namer_app/test/widget_test.dart
          +++ b/namer_app/test/widget_test.dart
          @@ -45,4 +45,26 @@
                     'randomly generated at all. The button does not work.',
               );
             });
          +
          +  testWidgets('Tapping "Like" changes icon', (WidgetTester tester) async {
          +    await tester.pumpWidget(const MyApp());
          +
          +    Finder findElevatedButtonByIcon(IconData icon) {
          +      return find.descendant(
          +        of: find.bySubtype<ElevatedButton>(),
          +        matching: find.byIcon(icon),
          +      );
          +    }
          +
          +    // At start: an outlined heart icon.
          +    expect(findElevatedButtonByIcon(Icons.favorite_border), findsOneWidget);
          +    expect(findElevatedButtonByIcon(Icons.favorite), findsNothing);
          +
          +    await tester.tap(find.text('Like'));
          +    await tester.pumpAndSettle();
          +
          +    // After tap: a full heart icon.
          +    expect(findElevatedButtonByIcon(Icons.favorite_border), findsNothing);
          +    expect(findElevatedButtonByIcon(Icons.favorite), findsOneWidget);
          +  });
           }
      - name: Copy step_06_c_add_like_button
        copydir:
          from: namer_app 
          to: step_06_c_add_like_button
  - name: step_07_a_split_my_home_page
    steps:
      - name: Remove generated code
        rmdir: step_07_a_split_my_home_page
      - name: Split MyHomePage into two widgets
        path: namer_app/lib/main.dart
        patch-u: |
          --- a/namer_app/lib/main.dart
          +++ b/namer_app/lib/main.dart
          @@ -48,6 +48,43 @@
           class MyHomePage extends StatelessWidget {
             @override
             Widget build(BuildContext context) {
          +    return Scaffold(
          +      body: Row(
          +        children: [
          +          SafeArea(
          +            child: NavigationRail(
          +              extended: false,
          +              destinations: [
          +                NavigationRailDestination(
          +                  icon: Icon(Icons.home),
          +                  label: Text('Home'),
          +                ),
          +                NavigationRailDestination(
          +                  icon: Icon(Icons.favorite),
          +                  label: Text('Favorites'),
          +                ),
          +              ],
          +              selectedIndex: 0,
          +              onDestinationSelected: (value) {
          +                print('selected: $value');
          +              },
          +            ),
          +          ),
          +          Expanded(
          +            child: Container(
          +              color: Theme.of(context).colorScheme.primaryContainer,
          +              child: GeneratorPage(),
          +            ),
          +          ),
          +        ],
          +      ),
          +    );
          +  }
          +}
          +
          +class GeneratorPage extends StatelessWidget {
          +  @override
          +  Widget build(BuildContext context) {
               var appState = context.watch<MyAppState>();
               var pair = appState.current;
           
          @@ -58,34 +95,32 @@
                 icon = Icons.favorite_border;
               }
           
          -    return Scaffold(
          -      body: Center(
          -        child: Column(
          -          mainAxisAlignment: MainAxisAlignment.center,
          -          children: [
          -            BigCard(pair: pair),
          -            SizedBox(height: 10),
          -            Row(
          -              mainAxisSize: MainAxisSize.min,
          -              children: [
          -                ElevatedButton.icon(
          -                  onPressed: () {
          -                    appState.toggleFavorite();
          -                  },
          -                  icon: Icon(icon),
          -                  label: Text('Like'),
          -                ),
          -                SizedBox(width: 10),
          -                ElevatedButton(
          -                  onPressed: () {
          -                    appState.getNext();
          -                  },
          -                  child: Text('Next'),
          -                ),
          -              ],
          -            ),
          -          ],
          -        ),
          +    return Center(
          +      child: Column(
          +        mainAxisAlignment: MainAxisAlignment.center,
          +        children: [
          +          BigCard(pair: pair),
          +          SizedBox(height: 10),
          +          Row(
          +            mainAxisSize: MainAxisSize.min,
          +            children: [
          +              ElevatedButton.icon(
          +                onPressed: () {
          +                  appState.toggleFavorite();
          +                },
          +                icon: Icon(icon),
          +                label: Text('Like'),
          +              ),
          +              SizedBox(width: 10),
          +              ElevatedButton(
          +                onPressed: () {
          +                  appState.getNext();
          +                },
          +                child: Text('Next'),
          +              ),
          +            ],
          +          ),
          +        ],
                 ),
               );
             }
      - name: Copy step_07_a_split_my_home_page
        copydir:
          from: namer_app 
          to: step_07_a_split_my_home_page
  - name: step_07_b_convert_to_stateful
    steps:
      - name: Remove generated code
        rmdir: step_07_b_convert_to_stateful
      - name: Convert MyHomePage to StatefulWidget
        path: namer_app/lib/main.dart
        patch-u: |
          --- a/namer_app/lib/main.dart
          +++ b/namer_app/lib/main.dart
          @@ -45,7 +45,12 @@ class MyAppState extends ChangeNotifier {
             }
           }
           
          -class MyHomePage extends StatelessWidget {
          +class MyHomePage extends StatefulWidget {
          +  @override
          +  State<MyHomePage> createState() => _MyHomePageState();
          +}
          +
          +class _MyHomePageState extends State<MyHomePage> {
             @override
             Widget build(BuildContext context) {
               return Scaffold(
      - name: Copy step_07_b_convert_to_stateful
        copydir:
          from: namer_app 
          to: step_07_b_convert_to_stateful
  - name: step_07_c_add_selectedindex
    steps:
      - name: Remove generated code
        rmdir: step_07_c_add_selectedindex
      - name: Add selectedIndex
        path: namer_app/lib/main.dart
        patch-u: |
          --- a/namer_app/lib/main.dart
          +++ b/namer_app/lib/main.dart
          @@ -51,6 +51,8 @@
           }

           class _MyHomePageState extends State<MyHomePage> {
          +  var selectedIndex = 0;
          +
             @override
             Widget build(BuildContext context) {
               return Scaffold(
          @@ -69,9 +71,11 @@
                             label: Text('Favorites'),
                           ),
                         ],
          -              selectedIndex: 0,
          +              selectedIndex: selectedIndex,
                         onDestinationSelected: (value) {
          -                print('selected: $value');
          +                setState(() {
          +                  selectedIndex = value;
          +                });
                         },
                       ),
                     ),
      - name: Copy step_07_c_add_selectedindex
        copydir:
          from: namer_app 
          to: step_07_c_add_selectedindex
  - name: step_07_d_use_selectedindex
    steps:
      - name: Remove generated code
        rmdir: step_07_d_use_selectedindex
      - name: Use selectedIndex
        path: namer_app/lib/main.dart
        patch-u: |
          --- b/namer/step_07_d_use_selectedindex/lib/main.dart
          +++ a/namer/step_07_d_use_selectedindex/lib/main.dart
          @@ -55,6 +55,16 @@ class _MyHomePageState extends State<MyHomePage> {
           
             @override
             Widget build(BuildContext context) {
          +    Widget page;
          +    switch (selectedIndex) {
          +      case 0:
          +        page = GeneratorPage();
          +      case 1:
          +        page = Placeholder();
          +      default:
          +        throw UnimplementedError('no widget for $selectedIndex');
          +    }
          +
               return Scaffold(
                 body: Row(
                   children: [
          @@ -82,7 +92,7 @@ class _MyHomePageState extends State<MyHomePage> {
                     Expanded(
                       child: Container(
                         color: Theme.of(context).colorScheme.primaryContainer,
          -              child: GeneratorPage(),
          +              child: page,
                       ),
                     ),
                   ],
      - name: Copy step_07_d_use_selectedindex
        copydir:
          from: namer_app 
          to: step_07_d_use_selectedindex
  - name: step_07_e_add_layout_builder
    steps:
      - name: Remove generated code
        rmdir: step_07_e_add_layout_builder
      - name: Add LayoutBuilder
        path: namer_app/lib/main.dart
        patch-u: |
          --- a/namer_app/lib/main.dart
          +++ b/namer_app/lib/main.dart
          @@ -65,39 +65,41 @@
                   throw UnimplementedError('no widget for $selectedIndex');
               }

          -    return Scaffold(
          -      body: Row(
          -        children: [
          -          SafeArea(
          -            child: NavigationRail(
          -              extended: false,
          -              destinations: [
          -                NavigationRailDestination(
          -                  icon: Icon(Icons.home),
          -                  label: Text('Home'),
          -                ),
          -                NavigationRailDestination(
          -                  icon: Icon(Icons.favorite),
          -                  label: Text('Favorites'),
          -                ),
          -              ],
          -              selectedIndex: selectedIndex,
          -              onDestinationSelected: (value) {
          -                setState(() {
          -                  selectedIndex = value;
          -                });
          -              },
          +    return LayoutBuilder(builder: (context, constraints) {
          +      return Scaffold(
          +        body: Row(
          +          children: [
          +            SafeArea(
          +              child: NavigationRail(
          +                extended: constraints.maxWidth >= 600,
          +                destinations: [
          +                  NavigationRailDestination(
          +                    icon: Icon(Icons.home),
          +                    label: Text('Home'),
          +                  ),
          +                  NavigationRailDestination(
          +                    icon: Icon(Icons.favorite),
          +                    label: Text('Favorites'),
          +                  ),
          +                ],
          +                selectedIndex: selectedIndex,
          +                onDestinationSelected: (value) {
          +                  setState(() {
          +                    selectedIndex = value;
          +                  });
          +                },
          +              ),
                       ),
          -          ),
          -          Expanded(
          -            child: Container(
          -              color: Theme.of(context).colorScheme.primaryContainer,
          -              child: page,
          +            Expanded(
          +              child: Container(
          +                color: Theme.of(context).colorScheme.primaryContainer,
          +                child: page,
          +              ),
                       ),
          -          ),
          -        ],
          -      ),
          -    );
          +          ],
          +        ),
          +      );
          +    });
             }
           }
      - name: Copy step_07_e_add_layout_builder
        copydir:
          from: namer_app 
          to: step_07_e_add_layout_builder
  - name: step_08
    steps:
      - name: Remove generated code
        rmdir: step_08
      - name: Add FavoritesPage
        path: namer_app/lib/main.dart
        patch-u: |
          --- b/namer/step_08/lib/main.dart
          +++ a/namer/step_08/lib/main.dart
          @@ -60,7 +60,7 @@ class _MyHomePageState extends State<MyHomePage> {
                 case 0:
                   page = GeneratorPage();
                 case 1:
          -        page = Placeholder();
          +        page = FavoritesPage();
                 default:
                   throw UnimplementedError('no widget for $selectedIndex');
               }
          @@ -175,3 +175,31 @@ class BigCard extends StatelessWidget {
               );
             }
           }
          +
          +class FavoritesPage extends StatelessWidget {
          +  @override
          +  Widget build(BuildContext context) {
          +    var appState = context.watch<MyAppState>();
          +
          +    if (appState.favorites.isEmpty) {
          +      return Center(
          +        child: Text('No favorites yet.'),
          +      );
          +    }
          +
          +    return ListView(
          +      children: [
          +        Padding(
          +          padding: const EdgeInsets.all(20),
          +          child: Text('You have '
          +              '${appState.favorites.length} favorites:'),
          +        ),
          +        for (var pair in appState.favorites)
          +          ListTile(
          +            leading: Icon(Icons.favorite),
          +            title: Text(pair.asLowerCase),
          +          ),
          +      ],
          +    );
          +  }
          +}
      - name: Add test to check FavoritesPage
        path: namer_app/test/widget_test.dart
        patch-u: |
          --- a/namer_app/test/widget_test.dart
          +++ b/namer_app/test/widget_test.dart
          @@ -67,4 +67,45 @@ void main() {
               expect(findElevatedButtonByIcon(Icons.favorite_border), findsNothing);
               expect(findElevatedButtonByIcon(Icons.favorite), findsOneWidget);
             });
          +
          +  testWidgets('Liked word pair shows up in Favorites',
          +      (WidgetTester tester) async {
          +    await tester.pumpWidget(const MyApp());
          +
          +    // Find the currently shown word pair.
          +    final wordPairTextWidget = tester.widget<Text>(find.descendant(
          +      of: find.byType(BigCard),
          +      matching: find.byType(Text),
          +    ));
          +    final current = wordPairTextWidget.data!;
          +
          +    // Go to the Favorites page.
          +    await tester.tap(find.descendant(
          +      of: find.byType(NavigationRail),
          +      matching: find.byIcon(Icons.favorite),
          +    ));
          +    await tester.pumpAndSettle();
          +
          +    // Not there yet.
          +    expect(find.text(current), findsNothing);
          +
          +    // Go back to the Generator page.
          +    await tester.tap(find.descendant(
          +      of: find.byType(NavigationRail),
          +      matching: find.byIcon(Icons.home),
          +    ));
          +    await tester.pumpAndSettle();
          +
          +    await tester.tap(find.text('Like'));
          +
          +    // Go to Favorites page once again.
          +    await tester.tap(find.descendant(
          +      of: find.byType(NavigationRail),
          +      matching: find.byIcon(Icons.favorite),
          +    ));
          +    await tester.pumpAndSettle();
          +
          +    // Should be there.
          +    expect(find.text(current), findsOneWidget);
          +  });
           }
      - name: Add accessibility guidelines test
        path: namer_app/test/a11y_test.dart
        replace-contents: |
          import 'package:flutter_test/flutter_test.dart';
          import 'package:namer_app/main.dart';

          void main() {
            testWidgets('Follows a11y guidelines', (WidgetTester tester) async {
              // #docregion insideTest
              final SemanticsHandle handle = tester.ensureSemantics();
              await tester.pumpWidget(MyApp());

              // Checks that tappable nodes have a minimum size of 48 by 48 pixels
              // for Android.
              await expectLater(tester, meetsGuideline(androidTapTargetGuideline));

              // Checks that tappable nodes have a minimum size of 44 by 44 pixels
              // for iOS.
              await expectLater(tester, meetsGuideline(iOSTapTargetGuideline));

              // Checks that touch targets with a tap or long press action are labeled.
              await expectLater(tester, meetsGuideline(labeledTapTargetGuideline));

              // Checks whether semantic nodes meet the minimum text contrast levels.
              // The recommended text contrast is 3:1 for larger text
              // (18 point and above regular).
              await expectLater(tester, meetsGuideline(textContrastGuideline));
              handle.dispose();
              // #enddocregion insideTest
            });
          }
      - name: Build iOS simulator bundle
        platforms: [ macos ]
        path: namer_app
        flutter: build ios --simulator
      - name: Build macOS app
        platforms: [ macos ]
        path: namer_app
        flutter: build macos
      - name: Build Linux app
        platforms: [ linux ]
        path: namer_app
        flutter: build linux
      - name: Build Windows app
        platforms: [ windows ]
        path: namer_app
        flutter: build windows
      - name: Add cupertino_icons for web build
        path: namer_app
        flutter: pub add cupertino_icons
      - name: Build Web app
        path: namer_app
        flutter: build web
      - name: Copy step_08
        copydir:
          from: namer_app 
          to: step_08
      - name: Flutter clean
        path: step_08
        flutter: clean
  - name: Cleanup
    rmdir: namer_app
