name: WebView in FLutter script
steps:
  - name: step_03
    steps:
      - name: Remove generated code
        rmdir: step_03
      - name: Create project
        flutter: create webview_in_flutter --platforms=android,ios
      - name: Strip DEVELOPMENT_TEAM
        strip-lines-containing: DEVELOPMENT_TEAM =
        path: webview_in_flutter/ios/Runner.xcodeproj/project.pbxproj
      - name: Upgrade dependencies
        path: webview_in_flutter
        flutter: pub upgrade --major-versions
      - name: Configure analysis_options.yaml
        path: webview_in_flutter/analysis_options.yaml
        replace-contents: |
          include: ../../analysis_options.yaml
      - name: Remove README
        rm: webview_in_flutter/README.md
      - name: Add .vscode directory
        mkdir: webview_in_flutter/.vscode
      - name: Add .vscode/launch.json
        path: webview_in_flutter/.vscode/launch.json
        replace-contents: |
          {
              // Use IntelliSense to learn about possible attributes.
              // Hover to view descriptions of existing attributes.
              // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
              "version": "0.2.0",
              "configurations": [
                  {
                      "name": "webview_in_flutter",
                      "request": "launch",
                      "type": "dart"
                  }
              ]
          }
      - name: Dart fix
        path: webview_in_flutter
        dart: fix --apply
      - name: Add webview_flutter
        path: webview_in_flutter
        flutter: pub add webview_flutter
      - name: Patch android/app/build.gradle.kts
        path: webview_in_flutter/android/app/build.gradle.kts
        patch-u: |
          --- b/webview_flutter/step_03/android/app/build.gradle
          +++ a/webview_flutter/step_03/android/app/build.gradle
          @@ -24,7 +24,7 @@ android {
                   applicationId = "com.example.webview_in_flutter"
                   // You can update the following values to match your application needs.
                   // For more information, see: https://flutter.dev/to/review-gradle-config.
          -        minSdk = flutter.minSdkVersion
          +        minSdk = 21
                   targetSdk = flutter.targetSdkVersion
                   versionCode = flutter.versionCode
                   versionName = flutter.versionName
      - name: Build iOS
        platforms: [ macos ]
        path: webview_in_flutter
        flutter: build ios --simulator
      - name: Build Android
        platforms: [ macos ]
        path: webview_in_flutter
        flutter: build apk
      - name: Copy step_03
        copydir:
          from: webview_in_flutter
          to: step_03
  - name: step_04
    steps:
      - name: Remove generated code
        rmdir: step_04
      - name: Replace lib/main.dart
        path: webview_in_flutter/lib/main.dart
        replace-contents: |
          // Copyright 2022 The Flutter Authors. All rights reserved.
          // Use of this source code is governed by a BSD-style license that can be
          // found in the LICENSE file.

          import 'package:flutter/material.dart';
          import 'package:webview_flutter/webview_flutter.dart';

          void main() {
            runApp(MaterialApp(theme: ThemeData(), home: const WebViewApp()));
          }

          class WebViewApp extends StatefulWidget {
            const WebViewApp({super.key});

            @override
            State<WebViewApp> createState() => _WebViewAppState();
          }

          class _WebViewAppState extends State<WebViewApp> {
            late final WebViewController controller;

            @override
            void initState() {
              super.initState();
              controller =
                  WebViewController()..loadRequest(Uri.parse('https://flutter.dev'));
            }

            @override
            Widget build(BuildContext context) {
              return Scaffold(
                appBar: AppBar(title: const Text('Flutter WebView')),
                body: WebViewWidget(controller: controller),
              );
            }
          }
      - name: Delete test/widget_test.dart
        rmdir: webview_in_flutter/test
      - name: Copy step_04
        copydir:
          from: webview_in_flutter
          to: step_04
  - name: step_05
    steps:
      - name: Remove generated code
        rmdir: step_05
      - name: Make lib/src
        path: webview_in_flutter
        mkdir: lib/src
      - name: Create lib/src/web_view_stack.dart
        path: webview_in_flutter/lib/src/web_view_stack.dart
        replace-contents: |
          // Copyright 2022 The Flutter Authors. All rights reserved.
          // Use of this source code is governed by a BSD-style license that can be
          // found in the LICENSE file.

          import 'package:flutter/material.dart';
          import 'package:webview_flutter/webview_flutter.dart';

          class WebViewStack extends StatefulWidget {
            const WebViewStack({super.key});

            @override
            State<WebViewStack> createState() => _WebViewStackState();
          }

          class _WebViewStackState extends State<WebViewStack> {
            var loadingPercentage = 0;
            late final WebViewController controller;

            @override
            void initState() {
              super.initState();
              controller =
                  WebViewController()
                    ..setNavigationDelegate(
                      NavigationDelegate(
                        onPageStarted: (url) {
                          setState(() {
                            loadingPercentage = 0;
                          });
                        },
                        onProgress: (progress) {
                          setState(() {
                            loadingPercentage = progress;
                          });
                        },
                        onPageFinished: (url) {
                          setState(() {
                            loadingPercentage = 100;
                          });
                        },
                      ),
                    )
                    ..loadRequest(Uri.parse('https://flutter.dev'));
            }

            @override
            Widget build(BuildContext context) {
              return Stack(
                children: [
                  WebViewWidget(controller: controller),
                  if (loadingPercentage < 100)
                    LinearProgressIndicator(value: loadingPercentage / 100.0),
                ],
              );
            }
          }
      - name: Patch lib/main.dart
        path: webview_in_flutter/lib/main.dart
        patch-u: |
          --- b/webview_flutter/step_05/lib/main.dart
          +++ a/webview_flutter/step_05/lib/main.dart
          @@ -3,7 +3,8 @@
           // found in the LICENSE file.
           
           import 'package:flutter/material.dart';
          -import 'package:webview_flutter/webview_flutter.dart';
          +
          +import 'src/web_view_stack.dart';
           
           void main() {
             runApp(MaterialApp(theme: ThemeData(), home: const WebViewApp()));
          @@ -17,20 +18,11 @@ class WebViewApp extends StatefulWidget {
           }
           
           class _WebViewAppState extends State<WebViewApp> {
          -  late final WebViewController controller;
          -
          -  @override
          -  void initState() {
          -    super.initState();
          -    controller =
          -        WebViewController()..loadRequest(Uri.parse('https://flutter.dev'));
          -  }
          -
             @override
             Widget build(BuildContext context) {
               return Scaffold(
                 appBar: AppBar(title: const Text('Flutter WebView')),
          -      body: WebViewWidget(controller: controller),
          +      body: const WebViewStack(),
               );
             }
           }
      - name: Copy step_05
        copydir:
          from: webview_in_flutter
          to: step_05
  - name: step_06
    steps:
      - name: Remove step_06
        rmdir: step_06
      - name: Create lib/src/navigation_controls.dart
        path: webview_in_flutter/lib/src/navigation_controls.dart
        replace-contents: |
          // Copyright 2022 The Flutter Authors. All rights reserved.
          // Use of this source code is governed by a BSD-style license that can be
          // found in the LICENSE file.
          
          import 'package:flutter/material.dart';
          import 'package:webview_flutter/webview_flutter.dart';
          
          class NavigationControls extends StatelessWidget {
            const NavigationControls({required this.controller, super.key});
          
            final WebViewController controller;
          
            @override
            Widget build(BuildContext context) {
              return Row(
                children: <Widget>[
                  IconButton(
                    icon: const Icon(Icons.arrow_back_ios),
                    onPressed: () async {
                      final messenger = ScaffoldMessenger.of(context);
                      if (await controller.canGoBack()) {
                        await controller.goBack();
                      } else {
                        messenger.showSnackBar(
                          const SnackBar(content: Text('No back history item')),
                        );
                        return;
                      }
                    },
                  ),
                  IconButton(
                    icon: const Icon(Icons.arrow_forward_ios),
                    onPressed: () async {
                      final messenger = ScaffoldMessenger.of(context);
                      if (await controller.canGoForward()) {
                        await controller.goForward();
                      } else {
                        messenger.showSnackBar(
                          const SnackBar(content: Text('No forward history item')),
                        );
                        return;
                      }
                    },
                  ),
                  IconButton(
                    icon: const Icon(Icons.replay),
                    onPressed: () {
                      controller.reload();
                    },
                  ),
                ],
              );
            }
          }
      - name: Patch lib/main.dart
        path: webview_in_flutter/lib/main.dart
        patch-u: |
          --- b/webview_flutter/step_06/lib/main.dart
          +++ a/webview_flutter/step_06/lib/main.dart
          @@ -3,7 +3,9 @@
           // found in the LICENSE file.
           
           import 'package:flutter/material.dart';
          +import 'package:webview_flutter/webview_flutter.dart';
           
          +import 'src/navigation_controls.dart';
           import 'src/web_view_stack.dart';
           
           void main() {
          @@ -18,11 +20,23 @@ class WebViewApp extends StatefulWidget {
           }
           
           class _WebViewAppState extends State<WebViewApp> {
          +  late final WebViewController controller;
          +
          +  @override
          +  void initState() {
          +    super.initState();
          +    controller =
          +        WebViewController()..loadRequest(Uri.parse('https://flutter.dev'));
          +  }
          +
             @override
             Widget build(BuildContext context) {
               return Scaffold(
          -      appBar: AppBar(title: const Text('Flutter WebView')),
          -      body: const WebViewStack(),
          +      appBar: AppBar(
          +        title: const Text('Flutter WebView'),
          +        actions: [NavigationControls(controller: controller)],
          +      ),
          +      body: WebViewStack(controller: controller),
               );
             }
           }
      - name: Patch lib/src/web_view_stack.dart
        path: webview_in_flutter/lib/src/web_view_stack.dart
        patch-u: |
          --- b/webview_flutter/step_06/lib/src/web_view_stack.dart
          +++ a/webview_flutter/step_06/lib/src/web_view_stack.dart
          @@ -6,7 +6,9 @@ import 'package:flutter/material.dart';
           import 'package:webview_flutter/webview_flutter.dart';
           
           class WebViewStack extends StatefulWidget {
          -  const WebViewStack({super.key});
          +  const WebViewStack({required this.controller, super.key});
          +
          +  final WebViewController controller;
           
             @override
             State<WebViewStack> createState() => _WebViewStackState();
          @@ -14,40 +16,36 @@ class WebViewStack extends StatefulWidget {
           
           class _WebViewStackState extends State<WebViewStack> {
             var loadingPercentage = 0;
          -  late final WebViewController controller;
           
             @override
             void initState() {
               super.initState();
          -    controller =
          -        WebViewController()
          -          ..setNavigationDelegate(
          -            NavigationDelegate(
          -              onPageStarted: (url) {
          -                setState(() {
          -                  loadingPercentage = 0;
          -                });
          -              },
          -              onProgress: (progress) {
          -                setState(() {
          -                  loadingPercentage = progress;
          -                });
          -              },
          -              onPageFinished: (url) {
          -                setState(() {
          -                  loadingPercentage = 100;
          -                });
          -              },
          -            ),
          -          )
          -          ..loadRequest(Uri.parse('https://flutter.dev'));
          +    widget.controller.setNavigationDelegate(
          +      NavigationDelegate(
          +        onPageStarted: (url) {
          +          setState(() {
          +            loadingPercentage = 0;
          +          });
          +        },
          +        onProgress: (progress) {
          +          setState(() {
          +            loadingPercentage = progress;
          +          });
          +        },
          +        onPageFinished: (url) {
          +          setState(() {
          +            loadingPercentage = 100;
          +          });
          +        },
          +      ),
          +    );
             }
           
             @override
             Widget build(BuildContext context) {
               return Stack(
                 children: [
          -        WebViewWidget(controller: controller),
          +        WebViewWidget(controller: widget.controller),
                   if (loadingPercentage < 100)
                     LinearProgressIndicator(value: loadingPercentage / 100.0),
                 ],
      - name: Copy step_06
        copydir:
          from: webview_in_flutter
          to: step_06
  - name: step_07
    steps:
      - name: Remove step_07
        rmdir: step_07
      - name: Patch lib/src/web_view_stack.dart
        path: webview_in_flutter/lib/src/web_view_stack.dart
        patch-u: |
          --- b/webview_flutter/step_07/lib/src/web_view_stack.dart
          +++ a/webview_flutter/step_07/lib/src/web_view_stack.dart
          @@ -37,6 +37,16 @@ class _WebViewStackState extends State<WebViewStack> {
                       loadingPercentage = 100;
                     });
                   },
          +        onNavigationRequest: (navigation) {
          +          final host = Uri.parse(navigation.url).host;
          +          if (host.contains('youtube.com')) {
          +            ScaffoldMessenger.of(context).showSnackBar(
          +              SnackBar(content: Text('Blocking navigation to $host')),
          +            );
          +            return NavigationDecision.prevent;
          +          }
          +          return NavigationDecision.navigate;
          +        },
                 ),
               );
             }
      - name: Copy step_07
        copydir:
          from: webview_in_flutter
          to: step_07
  - name: step_08
    steps:
      - name: Remove step_08
        rmdir: step_08
      - name: Add lib/src/menu.dart
        path: webview_in_flutter/lib/src/menu.dart
        replace-contents: |
          // Copyright 2022 The Flutter Authors. All rights reserved.
          // Use of this source code is governed by a BSD-style license that can be
          // found in the LICENSE file.

          import 'package:flutter/material.dart';
          import 'package:webview_flutter/webview_flutter.dart';

          enum _MenuOptions { navigationDelegate }

          class Menu extends StatelessWidget {
            const Menu({required this.controller, super.key});

            final WebViewController controller;

            @override
            Widget build(BuildContext context) {
              return PopupMenuButton<_MenuOptions>(
                onSelected: (value) async {
                  switch (value) {
                    case _MenuOptions.navigationDelegate:
                      await controller.loadRequest(Uri.parse('https://youtube.com'));
                  }
                },
                itemBuilder:
                    (context) => [
                      const PopupMenuItem<_MenuOptions>(
                        value: _MenuOptions.navigationDelegate,
                        child: Text('Navigate to YouTube'),
                      ),
                    ],
              );
            }
          }
      - name: Patch lib/main.dart
        path: webview_in_flutter/lib/main.dart
        patch-u: |
          --- b/webview_flutter/step_08/lib/main.dart
          +++ a/webview_flutter/step_08/lib/main.dart
          @@ -5,6 +5,7 @@
           import 'package:flutter/material.dart';
           import 'package:webview_flutter/webview_flutter.dart';
           
          +import 'src/menu.dart';
           import 'src/navigation_controls.dart';
           import 'src/web_view_stack.dart';
           
          @@ -34,7 +35,10 @@ class _WebViewAppState extends State<WebViewApp> {
               return Scaffold(
                 appBar: AppBar(
                   title: const Text('Flutter WebView'),
          -        actions: [NavigationControls(controller: controller)],
          +        actions: [
          +          NavigationControls(controller: controller),
          +          Menu(controller: controller),
          +        ],
                 ),
                 body: WebViewStack(controller: controller),
               );
      - name: Copy step_08
        copydir:
          from: webview_in_flutter
          to: step_08
  - name: step_09
    steps:
      - name: Remove step_09
        rmdir: step_09
      - name: Patch lib/src/menu.dart
        path: webview_in_flutter/lib/src/menu.dart
        patch-u: |
          --- b/webview_flutter/step_09/lib/src/menu.dart
          +++ a/webview_flutter/step_09/lib/src/menu.dart
          @@ -5,20 +5,34 @@
           import 'package:flutter/material.dart';
           import 'package:webview_flutter/webview_flutter.dart';
           
          -enum _MenuOptions { navigationDelegate }
          +enum _MenuOptions { navigationDelegate, userAgent }
           
          -class Menu extends StatelessWidget {
          +class Menu extends StatefulWidget {
             const Menu({required this.controller, super.key});
           
             final WebViewController controller;
           
          +  @override
          +  State<Menu> createState() => _MenuState();
          +}
          +
          +class _MenuState extends State<Menu> {
             @override
             Widget build(BuildContext context) {
               return PopupMenuButton<_MenuOptions>(
                 onSelected: (value) async {
                   switch (value) {
                     case _MenuOptions.navigationDelegate:
          -            await controller.loadRequest(Uri.parse('https://youtube.com'));
          +            await widget.controller.loadRequest(
          +              Uri.parse('https://youtube.com'),
          +            );
          +          case _MenuOptions.userAgent:
          +            final userAgent = await widget.controller
          +                .runJavaScriptReturningResult('navigator.userAgent');
          +            if (!context.mounted) return;
          +            ScaffoldMessenger.of(
          +              context,
          +            ).showSnackBar(SnackBar(content: Text('$userAgent')));
                   }
                 },
                 itemBuilder:
          @@ -27,6 +41,10 @@ class Menu extends StatelessWidget {
                         value: _MenuOptions.navigationDelegate,
                         child: Text('Navigate to YouTube'),
                       ),
          +            const PopupMenuItem<_MenuOptions>(
          +              value: _MenuOptions.userAgent,
          +              child: Text('Show user-agent'),
          +            ),
                     ],
               );
             }
      - name: Patch lib/src/web_view_stack.dart
        path: webview_in_flutter/lib/src/web_view_stack.dart
        patch-u: |
          --- b/webview_flutter/step_09/lib/src/web_view_stack.dart
          +++ a/webview_flutter/step_09/lib/src/web_view_stack.dart
          @@ -20,35 +20,37 @@ class _WebViewStackState extends State<WebViewStack> {
             @override
             void initState() {
               super.initState();
          -    widget.controller.setNavigationDelegate(
          -      NavigationDelegate(
          -        onPageStarted: (url) {
          -          setState(() {
          -            loadingPercentage = 0;
          -          });
          -        },
          -        onProgress: (progress) {
          -          setState(() {
          -            loadingPercentage = progress;
          -          });
          -        },
          -        onPageFinished: (url) {
          -          setState(() {
          -            loadingPercentage = 100;
          -          });
          -        },
          -        onNavigationRequest: (navigation) {
          -          final host = Uri.parse(navigation.url).host;
          -          if (host.contains('youtube.com')) {
          -            ScaffoldMessenger.of(context).showSnackBar(
          -              SnackBar(content: Text('Blocking navigation to $host')),
          -            );
          -            return NavigationDecision.prevent;
          -          }
          -          return NavigationDecision.navigate;
          -        },
          -      ),
          -    );
          +    widget.controller
          +      ..setNavigationDelegate(
          +        NavigationDelegate(
          +          onPageStarted: (url) {
          +            setState(() {
          +              loadingPercentage = 0;
          +            });
          +          },
          +          onProgress: (progress) {
          +            setState(() {
          +              loadingPercentage = progress;
          +            });
          +          },
          +          onPageFinished: (url) {
          +            setState(() {
          +              loadingPercentage = 100;
          +            });
          +          },
          +          onNavigationRequest: (navigation) {
          +            final host = Uri.parse(navigation.url).host;
          +            if (host.contains('youtube.com')) {
          +              ScaffoldMessenger.of(context).showSnackBar(
          +                SnackBar(content: Text('Blocking navigation to $host')),
          +              );
          +              return NavigationDecision.prevent;
          +            }
          +            return NavigationDecision.navigate;
          +          },
          +        ),
          +      )
          +      ..setJavaScriptMode(JavaScriptMode.unrestricted);
             }
           
             @override
      - name: Copy step_09
        copydir:
          from: webview_in_flutter
          to: step_09
  - name: step_10
    steps:
      - name: Remove step_10
        rmdir: step_10
      - name: Patch lib/src/menu.dart
        path: webview_in_flutter/lib/src/menu.dart
        patch-u: |
          --- b/webview_flutter/step_10/lib/src/menu.dart
          +++ a/webview_flutter/step_10/lib/src/menu.dart
          @@ -5,7 +5,7 @@
           import 'package:flutter/material.dart';
           import 'package:webview_flutter/webview_flutter.dart';
           
          -enum _MenuOptions { navigationDelegate, userAgent }
          +enum _MenuOptions { navigationDelegate, userAgent, javascriptChannel }
           
           class Menu extends StatefulWidget {
             const Menu({required this.controller, super.key});
          @@ -33,6 +33,19 @@ class _MenuState extends State<Menu> {
                       ScaffoldMessenger.of(
                         context,
                       ).showSnackBar(SnackBar(content: Text('$userAgent')));
          +          case _MenuOptions.javascriptChannel:
          +            await widget.controller.runJavaScript('''
          +var req = new XMLHttpRequest();
          +req.open('GET', "https://api.ipify.org/?format=json");
          +req.onload = function() {
          +  if (req.status == 200) {
          +    let response = JSON.parse(req.responseText);
          +    SnackBar.postMessage("IP Address: " + response.ip);
          +  } else {
          +    SnackBar.postMessage("Error: " + req.status);
          +  }
          +}
          +req.send();''');
                   }
                 },
                 itemBuilder:
          @@ -45,6 +58,10 @@ class _MenuState extends State<Menu> {
                         value: _MenuOptions.userAgent,
                         child: Text('Show user-agent'),
                       ),
          +            const PopupMenuItem<_MenuOptions>(
          +              value: _MenuOptions.javascriptChannel,
          +              child: Text('Lookup IP Address'),
          +            ),
                     ],
               );
             }
      - name: Patch lib/src/web_view_stack.dart
        path: webview_in_flutter/lib/src/web_view_stack.dart
        patch-u: |
          --- b/webview_flutter/step_10/lib/src/web_view_stack.dart
          +++ a/webview_flutter/step_10/lib/src/web_view_stack.dart
          @@ -50,7 +50,15 @@ class _WebViewStackState extends State<WebViewStack> {
                     },
                   ),
                 )
          -      ..setJavaScriptMode(JavaScriptMode.unrestricted);
          +      ..setJavaScriptMode(JavaScriptMode.unrestricted)
          +      ..addJavaScriptChannel(
          +        'SnackBar',
          +        onMessageReceived: (message) {
          +          ScaffoldMessenger.of(
          +            context,
          +          ).showSnackBar(SnackBar(content: Text(message.message)));
          +        },
          +      );
             }
           
             @override
      - name: Copy step_10
        copydir:
          from: webview_in_flutter
          to: step_10
  - name: step_11
    steps:
      - name: Remove step_11
        rmdir: step_11
      - name: Patch lib/src/menu.dart
        path: webview_in_flutter/lib/src/menu.dart
        patch-u: |
          --- b/webview_flutter/step_11/lib/src/menu.dart
          +++ a/webview_flutter/step_11/lib/src/menu.dart
          @@ -5,7 +5,16 @@
           import 'package:flutter/material.dart';
           import 'package:webview_flutter/webview_flutter.dart';
           
          -enum _MenuOptions { navigationDelegate, userAgent, javascriptChannel }
          +enum _MenuOptions {
          +  navigationDelegate,
          +  userAgent,
          +  javascriptChannel,
          +  listCookies,
          +  clearCookies,
          +  addCookie,
          +  setCookie,
          +  removeCookie,
          +}
           
           class Menu extends StatefulWidget {
             const Menu({required this.controller, super.key});
          @@ -17,6 +26,8 @@ class Menu extends StatefulWidget {
           }
           
           class _MenuState extends State<Menu> {
          +  final cookieManager = WebViewCookieManager();
          +
             @override
             Widget build(BuildContext context) {
               return PopupMenuButton<_MenuOptions>(
          @@ -46,6 +57,16 @@ req.onload = function() {
             }
           }
           req.send();''');
          +          case _MenuOptions.clearCookies:
          +            await _onClearCookies();
          +          case _MenuOptions.listCookies:
          +            await _onListCookies(widget.controller);
          +          case _MenuOptions.addCookie:
          +            await _onAddCookie(widget.controller);
          +          case _MenuOptions.setCookie:
          +            await _onSetCookie(widget.controller);
          +          case _MenuOptions.removeCookie:
          +            await _onRemoveCookie(widget.controller);
                   }
                 },
                 itemBuilder:
          @@ -62,7 +83,81 @@ req.send();''');
                         value: _MenuOptions.javascriptChannel,
                         child: Text('Lookup IP Address'),
                       ),
          +            const PopupMenuItem<_MenuOptions>(
          +              value: _MenuOptions.clearCookies,
          +              child: Text('Clear cookies'),
          +            ),
          +            const PopupMenuItem<_MenuOptions>(
          +              value: _MenuOptions.listCookies,
          +              child: Text('List cookies'),
          +            ),
          +            const PopupMenuItem<_MenuOptions>(
          +              value: _MenuOptions.addCookie,
          +              child: Text('Add cookie'),
          +            ),
          +            const PopupMenuItem<_MenuOptions>(
          +              value: _MenuOptions.setCookie,
          +              child: Text('Set cookie'),
          +            ),
          +            const PopupMenuItem<_MenuOptions>(
          +              value: _MenuOptions.removeCookie,
          +              child: Text('Remove cookie'),
          +            ),
                     ],
               );
             }
          +
          +  Future<void> _onListCookies(WebViewController controller) async {
          +    final String cookies =
          +        await controller.runJavaScriptReturningResult('document.cookie')
          +            as String;
          +    if (!mounted) return;
          +    ScaffoldMessenger.of(context).showSnackBar(
          +      SnackBar(
          +        content: Text(cookies.isNotEmpty ? cookies : 'There are no cookies.'),
          +      ),
          +    );
          +  }
          +
          +  Future<void> _onClearCookies() async {
          +    final hadCookies = await cookieManager.clearCookies();
          +    String message = 'There were cookies. Now, they are gone!';
          +    if (!hadCookies) {
          +      message = 'There were no cookies to clear.';
          +    }
          +    if (!mounted) return;
          +    ScaffoldMessenger.of(
          +      context,
          +    ).showSnackBar(SnackBar(content: Text(message)));
          +  }
          +
          +  Future<void> _onAddCookie(WebViewController controller) async {
          +    await controller.runJavaScript('''var date = new Date();
          +    date.setTime(date.getTime()+(30*24*60*60*1000));
          +    document.cookie = "FirstName=John; expires=" + date.toGMTString();''');
          +    if (!mounted) return;
          +    ScaffoldMessenger.of(
          +      context,
          +    ).showSnackBar(const SnackBar(content: Text('Custom cookie added.')));
          +  }
          +
          +  Future<void> _onSetCookie(WebViewController controller) async {
          +    await cookieManager.setCookie(
          +      const WebViewCookie(name: 'foo', value: 'bar', domain: 'flutter.dev'),
          +    );
          +    if (!mounted) return;
          +    ScaffoldMessenger.of(
          +      context,
          +    ).showSnackBar(const SnackBar(content: Text('Custom cookie is set.')));
          +  }
          +
          +  Future<void> _onRemoveCookie(WebViewController controller) async {
          +    await controller.runJavaScript(
          +      'document.cookie="FirstName=John; expires=Thu, 01 Jan 1970 00:00:00 UTC" ',
          +    );
          +    if (!mounted) return;
          +    ScaffoldMessenger.of(
          +      context,
          +    ).showSnackBar(const SnackBar(content: Text('Custom cookie removed.')));
          +  }
           }
      - name: Copy step_11
        copydir:
          from: webview_in_flutter
          to: step_11
  - name: step_12
    steps:
      - name: Remove step_12
        rmdir: step_12
      - name: Add path_provider
        path: webview_in_flutter
        flutter: pub add path_provider
      - name: Patch pubspec.yaml
        path: webview_in_flutter/pubspec.yaml
        patch-u: |
          --- b/webview_flutter/step_12/pubspec.yaml
          +++ a/webview_flutter/step_12/pubspec.yaml
          @@ -58,6 +59,9 @@ flutter:
             # included with your application, so that you can use the icons in
             # the material Icons class.
             uses-material-design: true
          +  assets:
          +    - assets/www/index.html
          +    - assets/www/styles/style.css
           
             # To add assets to your application, add an assets section, like this:
             # assets:
      - name: Patch lib/src/menu.dart
        path: webview_in_flutter/lib/src/menu.dart
        patch-u: |
          --- b/webview_flutter/step_12/lib/src/menu.dart
          +++ a/webview_flutter/step_12/lib/src/menu.dart
          @@ -2,9 +2,30 @@
           // Use of this source code is governed by a BSD-style license that can be
           // found in the LICENSE file.
           
          +import 'dart:io';
           import 'package:flutter/material.dart';
          +import 'package:path_provider/path_provider.dart';
           import 'package:webview_flutter/webview_flutter.dart';
           
          +const String kExamplePage = '''
          +<!DOCTYPE html>
          +<html lang="en">
          +<head>
          +<title>Load file or HTML string example</title>
          +</head>
          +<body>
          +
          +<h1>Local demo page</h1>
          +<p>
          +  This is an example page used to demonstrate how to load a local file or HTML
          +  string using the <a href="https://pub.dev/packages/webview_flutter">Flutter
          +  webview</a> plugin.
          +</p>
          +
          +</body>
          +</html>
          +''';
          +
           enum _MenuOptions {
             navigationDelegate,
             userAgent,
          @@ -14,6 +35,9 @@ enum _MenuOptions {
             addCookie,
             setCookie,
             removeCookie,
          +  loadFlutterAsset,
          +  loadLocalFile,
          +  loadHtmlString,
           }
           
           class Menu extends StatefulWidget {
          @@ -67,6 +91,15 @@ req.send();''');
                       await _onSetCookie(widget.controller);
                     case _MenuOptions.removeCookie:
                       await _onRemoveCookie(widget.controller);
          +          case _MenuOptions.loadFlutterAsset:
          +            if (!mounted) return;
          +            await _onLoadFlutterAssetExample(widget.controller, context);
          +          case _MenuOptions.loadLocalFile:
          +            if (!mounted) return;
          +            await _onLoadLocalFileExample(widget.controller, context);
          +          case _MenuOptions.loadHtmlString:
          +            if (!mounted) return;
          +            await _onLoadHtmlStringExample(widget.controller, context);
                   }
                 },
                 itemBuilder:
          @@ -103,6 +136,18 @@ req.send();''');
                         value: _MenuOptions.removeCookie,
                         child: Text('Remove cookie'),
                       ),
          +            const PopupMenuItem<_MenuOptions>(
          +              value: _MenuOptions.loadFlutterAsset,
          +              child: Text('Load Flutter Asset'),
          +            ),
          +            const PopupMenuItem<_MenuOptions>(
          +              value: _MenuOptions.loadHtmlString,
          +              child: Text('Load HTML string'),
          +            ),
          +            const PopupMenuItem<_MenuOptions>(
          +              value: _MenuOptions.loadLocalFile,
          +              child: Text('Load local file'),
          +            ),
                     ],
               );
             }
          @@ -160,4 +205,37 @@ req.send();''');
                 context,
               ).showSnackBar(const SnackBar(content: Text('Custom cookie removed.')));
             }
          +
          +  Future<void> _onLoadFlutterAssetExample(
          +    WebViewController controller,
          +    BuildContext context,
          +  ) async {
          +    await controller.loadFlutterAsset('assets/www/index.html');
          +  }
          +
          +  Future<void> _onLoadLocalFileExample(
          +    WebViewController controller,
          +    BuildContext context,
          +  ) async {
          +    final String pathToIndex = await _prepareLocalFile();
          +
          +    await controller.loadFile(pathToIndex);
          +  }
          +
          +  static Future<String> _prepareLocalFile() async {
          +    final String tmpDir = (await getTemporaryDirectory()).path;
          +    final File indexFile = File('$tmpDir/www/index.html');
          +
          +    await Directory('$tmpDir/www').create(recursive: true);
          +    await indexFile.writeAsString(kExamplePage);
          +
          +    return indexFile.path;
          +  }
          +
          +  Future<void> _onLoadHtmlStringExample(
          +    WebViewController controller,
          +    BuildContext context,
          +  ) async {
          +    await controller.loadHtmlString(kExamplePage);
          +  }
           }
      - name: Make assets
        path: webview_in_flutter
        mkdir: assets
      - name: Make assets/www
        path: webview_in_flutter/assets
        mkdir: www
      - name: Add assets/www/index.html
        path: webview_in_flutter/assets/www/index.html
        replace-contents: |
          <!DOCTYPE html>
          <!-- Copyright 2013 The Flutter Authors. All rights reserved.
          Use of this source code is governed by a BSD-style license that can be
          found in the LICENSE file. -->
          <html lang="en">
          <head>
              <title>Load file or HTML string example</title>
              <link rel="stylesheet" href="styles/style.css" />
          </head>
          <body>

          <h1>Local demo page</h1>
          <p>
              This is an example page used to demonstrate how to load a local file or HTML
              string using the <a href="https://pub.dev/packages/webview_flutter">Flutter
              webview</a> plugin.
          </p>

          </body>
          </html>
      - name: Make assets/www/styles
        path: webview_in_flutter/assets/www
        mkdir: styles
      - name: Add assets/www/styles/style.css
        path: webview_in_flutter/assets/www/styles/style.css
        replace-contents: |
          h1 {
            color: blue;
          }
      - name: Flutter clean
        path: webview_in_flutter
        flutter: clean
      - name: Build iOS
        platforms: [ macos ]
        path: webview_in_flutter
        flutter: build ios --simulator
      - name: Build Android
        platforms: [ macos ]
        path: webview_in_flutter
        flutter: build apk
      - name: Copy step_12
        copydir:
          from: webview_in_flutter
          to: step_12
  - name: Cleanup
    rmdir: webview_in_flutter
