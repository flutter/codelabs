name: Dart Patterns and Records
steps:
  - name: step_03
    steps:
      - name: Remove generated code
        rmdir: step_03
      - name: Create project
        flutter: create --empty patterns_codelab
      - name: Strip DEVELOPMENT_TEAM
        strip-lines-containing: DEVELOPMENT_TEAM =
        path: patterns_codelab/ios/Runner.xcodeproj/project.pbxproj
      - name: Configure analysis_options.yaml
        path: patterns_codelab/analysis_options.yaml
        replace-contents: |
          include: ../../analysis_options.yaml
          
          analyzer:
            errors:
              unused_field: ignore
            language:
              strict-casts: false
              strict-inference: false
          
          linter:
            rules:
              - prefer_final_in_for_each
      - name: Remove README
        rm: patterns_codelab/README.md
      - name: Add .vscode directory
        mkdir: patterns_codelab/.vscode
      - name: Add .vscode/launch.json
        path: patterns_codelab/.vscode/launch.json
        replace-contents: |
          {
              // Use IntelliSense to learn about possible attributes.
              // Hover to view descriptions of existing attributes.
              // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
              "version": "0.2.0",
              "configurations": [
                  {
                      "name": "patterns_codelab",
                      "request": "launch",
                      "type": "dart"
                  }
              ]
          }
      - name: Format lib/main.dart
        path: patterns_codelab
        dart: format lib/main.dart
      - name: Patch lib/main.dart
        path: patterns_codelab/lib/main.dart
        patch-u: |
          --- b/dart-patterns-and-records/step_03/lib/main.dart
          +++ a/dart-patterns-and-records/step_03/lib/main.dart
          @@ -1,3 +1,7 @@
          +// Copyright 2023 The Flutter Authors. All rights reserved.
          +// Use of this source code is governed by a BSD-style license that can be
          +// found in the LICENSE file.
          +
           import 'package:flutter/material.dart';
           
           void main() {
      - name: Build web app
        path: patterns_codelab
        flutter: build web
      - name: Copy step_03
        copydir:
          from: patterns_codelab
          to: step_03
      - name: Flutter clean
        path: patterns_codelab
        flutter: clean
  - name: step_04
    steps:
      - name: Remove generated code
        rmdir: step_04
      - name: Add lib/data.dart
        path: patterns_codelab/lib/data.dart
        replace-contents: |
          // Copyright 2023 The Flutter Authors. All rights reserved.
          // Use of this source code is governed by a BSD-style license that can be
          // found in the LICENSE file.

          import 'dart:convert';

          class Document {
            final Map<String, Object?> _json;
            Document() : _json = jsonDecode(documentJson);
          }

          const documentJson = '''
          {
            "metadata": {
              "title": "My Document",
              "modified": "2023-05-10"
            },
            "blocks": [
              {
                "type": "h1",
                "text": "Chapter 1"
              },
              {
                "type": "p",
                "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit."
              },
              {
                "type": "checkbox",
                "checked": false,
                "text": "Learn Dart 3"
              }
            ]
          }
          ''';
      - name: Replace lib/main.dart
        path: patterns_codelab/lib/main.dart
        replace-contents: |
          // Copyright 2023 The Flutter Authors. All rights reserved.
          // Use of this source code is governed by a BSD-style license that can be
          // found in the LICENSE file.

          import 'package:flutter/material.dart';

          import 'data.dart';

          void main() {
            runApp(const DocumentApp());
          }

          class DocumentApp extends StatelessWidget {
            const DocumentApp({super.key});

            @override
            Widget build(BuildContext context) {
              return MaterialApp(
                theme: ThemeData(),
                home: DocumentScreen(document: Document()),
              );
            }
          }

          class DocumentScreen extends StatelessWidget {
            final Document document;

            const DocumentScreen({required this.document, super.key});

            @override
            Widget build(BuildContext context) {
              return Scaffold(
                appBar: AppBar(title: const Text('Title goes here')),
                body: const Column(children: [Center(child: Text('Body goes here'))]),
              );
            }
          }
      - name: Build web app
        path: patterns_codelab
        flutter: build web
      - name: Copy step_04
        copydir:
          from: patterns_codelab
          to: step_04
      - name: Flutter clean
        path: patterns_codelab
        flutter: clean
  - name: step_05
    steps:
      - name: Remove generated code
        rmdir: step_05
      - name: Update lib/data.dart
        path: patterns_codelab/lib/data.dart
        patch-u: |
          --- b/dart-patterns-and-records/step_05/lib/data.dart
          +++ a/dart-patterns-and-records/step_05/lib/data.dart
          @@ -7,6 +7,13 @@ import 'dart:convert';
           class Document {
             final Map<String, Object?> _json;
             Document() : _json = jsonDecode(documentJson);
          +
          +  (String, {DateTime modified}) get metadata {
          +    const title = 'My Document';
          +    final now = DateTime.now();
          +
          +    return (title, modified: now);
          +  }
           }
           
           const documentJson = '''
      - name: Update lib/main.dart
        path: patterns_codelab/lib/main.dart
        patch-u: |
          --- b/dart-patterns-and-records/step_05/lib/main.dart
          +++ a/dart-patterns-and-records/step_05/lib/main.dart
          @@ -29,9 +29,15 @@ class DocumentScreen extends StatelessWidget {
           
             @override
             Widget build(BuildContext context) {
          +    final metadataRecord = document.metadata;
          +
               return Scaffold(
          -      appBar: AppBar(title: const Text('Title goes here')),
          -      body: const Column(children: [Center(child: Text('Body goes here'))]),
          +      appBar: AppBar(title: Text(metadataRecord.$1)),
          +      body: Column(
          +        children: [
          +          Center(child: Text('Last modified ${metadataRecord.modified}')),
          +        ],
          +      ),
               );
             }
           }
      - name: Build web app
        path: patterns_codelab
        flutter: build web
      - name: Copy step_05
        copydir:
          from: patterns_codelab
          to: step_05
      - name: Flutter clean
        path: patterns_codelab
        flutter: clean
  - name: step_06_a
    steps:
      - name: Remove generated code
        rmdir: step_06_a
      - name: Update lib/main.dart
        path: patterns_codelab/lib/main.dart
        patch-u: |
          --- b/dart-patterns-and-records/step_06_a/lib/main.dart
          +++ a/dart-patterns-and-records/step_06_a/lib/main.dart
          @@ -29,15 +29,11 @@ class DocumentScreen extends StatelessWidget {
           
             @override
             Widget build(BuildContext context) {
          -    final metadataRecord = document.metadata;
          +    final (title, modified: modified) = document.metadata;
           
               return Scaffold(
          -      appBar: AppBar(title: Text(metadataRecord.$1)),
          -      body: Column(
          -        children: [
          -          Center(child: Text('Last modified ${metadataRecord.modified}')),
          -        ],
          -      ),
          +      appBar: AppBar(title: Text(title)),
          +      body: Column(children: [Center(child: Text('Last modified $modified'))]),
               );
             }
           }
      - name: Build web app
        path: patterns_codelab
        flutter: build web
      - name: Copy step_06_a
        copydir:
          from: patterns_codelab
          to: step_06_a
      - name: Flutter clean
        path: patterns_codelab
        flutter: clean
  - name: step_06_b
    steps:
      - name: Remove generated code
        rmdir: step_06_b
      - name: Update lib/main.dart
        path: patterns_codelab/lib/main.dart
        patch-u: |
          --- b/dart-patterns-and-records/step_06_b/lib/main.dart
          +++ a/dart-patterns-and-records/step_06_b/lib/main.dart
          @@ -29,7 +29,7 @@ class DocumentScreen extends StatelessWidget {
           
             @override
             Widget build(BuildContext context) {
          -    final (title, modified: modified) = document.metadata;
          +    final (title, :modified) = document.metadata;
           
               return Scaffold(
                 appBar: AppBar(title: Text(title)),
      - name: Build web app
        path: patterns_codelab
        flutter: build web
      - name: Copy step_06_b
        copydir:
          from: patterns_codelab
          to: step_06_b
      - name: Flutter clean
        path: patterns_codelab
        flutter: clean
  - name: step_07_a
    steps:
      - name: Remove generated code
        rmdir: step_07_a
      - name: Update lib/data.dart
        path: patterns_codelab/lib/data.dart
        patch-u: |
          --- b/dart-patterns-and-records/step_07_a/lib/data.dart
          +++ a/dart-patterns-and-records/step_07_a/lib/data.dart
          @@ -9,10 +9,17 @@ class Document {
             Document() : _json = jsonDecode(documentJson);
           
             (String, {DateTime modified}) get metadata {
          -    const title = 'My Document';
          -    final now = DateTime.now();
          -
          -    return (title, modified: now);
          +    if (_json.containsKey('metadata')) {
          +      final metadataJson = _json['metadata'];
          +      if (metadataJson is Map) {
          +        final title = metadataJson['title'] as String;
          +        final localModified = DateTime.parse(
          +          metadataJson['modified'] as String,
          +        );
          +        return (title, modified: localModified);
          +      }
          +    }
          +    throw const FormatException('Unexpected JSON');
             }
           }
      - name: Build web app
        path: patterns_codelab
        flutter: build web
      - name: Copy step_07_a
        copydir:
          from: patterns_codelab
          to: step_07_a
      - name: Flutter clean
        path: patterns_codelab
        flutter: clean
  - name: step_07_b
    steps:
      - name: Remove generated code
        rmdir: step_07_b
      - name: Update lib/data.dart
        path: patterns_codelab/lib/data.dart
        patch-u: |
          --- b/dart-patterns-and-records/step_07_b/lib/data.dart
          +++ a/dart-patterns-and-records/step_07_b/lib/data.dart
          @@ -9,17 +9,13 @@ class Document {
             Document() : _json = jsonDecode(documentJson);
           
             (String, {DateTime modified}) get metadata {
          -    if (_json.containsKey('metadata')) {
          -      final metadataJson = _json['metadata'];
          -      if (metadataJson is Map) {
          -        final title = metadataJson['title'] as String;
          -        final localModified = DateTime.parse(
          -          metadataJson['modified'] as String,
          -        );
          -        return (title, modified: localModified);
          -      }
          +    if (_json case {
          +      'metadata': {'title': String title, 'modified': String localModified},
          +    }) {
          +      return (title, modified: DateTime.parse(localModified));
          +    } else {
          +      throw const FormatException('Unexpected JSON');
               }
          -    throw const FormatException('Unexpected JSON');
             }
           }
      - name: Build web app
        path: patterns_codelab
        flutter: build web
      - name: Copy step_07_b
        copydir:
          from: patterns_codelab
          to: step_07_b
      - name: Flutter clean
        path: patterns_codelab
        flutter: clean
  - name: step_08
    steps:
      - name: Remove generated code
        rmdir: step_08
      - name: Update lib/data.dart
        path: patterns_codelab/lib/data.dart
        patch-u: |
          --- b/dart-patterns-and-records/step_08/lib/data.dart
          +++ a/dart-patterns-and-records/step_08/lib/data.dart
          @@ -17,6 +17,14 @@ class Document {
                 throw const FormatException('Unexpected JSON');
               }
             }
          +
          +  List<Block> getBlocks() {
          +    if (_json case {'blocks': List blocksJson}) {
          +      return [for (final blockJson in blocksJson) Block.fromJson(blockJson)];
          +    } else {
          +      throw const FormatException('Unexpected JSON format');
          +    }
          +  }
           }
           
           const documentJson = '''
          @@ -42,3 +50,17 @@ const documentJson = '''
             ]
           }
           ''';
          +
          +class Block {
          +  final String type;
          +  final String text;
          +  Block(this.type, this.text);
          +
          +  factory Block.fromJson(Map<String, dynamic> json) {
          +    if (json case {'type': final type, 'text': final text}) {
          +      return Block(type, text);
          +    } else {
          +      throw const FormatException('Unexpected JSON format');
          +    }
          +  }
          +}
      - name: Build web app
        path: patterns_codelab
        flutter: build web
      - name: Copy step_08
        copydir:
          from: patterns_codelab
          to: step_08
      - name: Flutter clean
        path: patterns_codelab
        flutter: clean
  - name: step_09
    steps:
      - name: Remove generated code
        rmdir: step_09
      - name: Update lib/main.dart
        path: patterns_codelab/lib/main.dart
        patch-u: |
          --- b/dart-patterns-and-records/step_09/lib/main.dart
          +++ a/dart-patterns-and-records/step_09/lib/main.dart
          @@ -30,10 +30,47 @@ class DocumentScreen extends StatelessWidget {
             @override
             Widget build(BuildContext context) {
               final (title, :modified) = document.metadata;
          +    final blocks = document.getBlocks();
           
               return Scaffold(
                 appBar: AppBar(title: Text(title)),
          -      body: Column(children: [Center(child: Text('Last modified $modified'))]),
          +      body: Column(
          +        children: [
          +          Text('Last modified: $modified'),
          +          Expanded(
          +            child: ListView.builder(
          +              itemCount: blocks.length,
          +              itemBuilder: (context, index) {
          +                return BlockWidget(block: blocks[index]);
          +              },
          +            ),
          +          ),
          +        ],
          +      ),
          +    );
          +  }
          +}
          +
          +class BlockWidget extends StatelessWidget {
          +  final Block block;
          +
          +  const BlockWidget({required this.block, super.key});
          +
          +  @override
          +  Widget build(BuildContext context) {
          +    TextStyle? textStyle;
          +    switch (block.type) {
          +      case 'h1':
          +        textStyle = Theme.of(context).textTheme.displayMedium;
          +      case 'p' || 'checkbox':
          +        textStyle = Theme.of(context).textTheme.bodyMedium;
          +      case _:
          +        textStyle = Theme.of(context).textTheme.bodySmall;
          +    }
          +
          +    return Container(
          +      margin: const EdgeInsets.all(8),
          +      child: Text(block.text, style: textStyle),
               );
             }
           }
      - name: Build web app
        path: patterns_codelab
        flutter: build web
      - name: Copy step_09
        copydir:
          from: patterns_codelab
          to: step_09
      - name: Flutter clean
        path: patterns_codelab
        flutter: clean
  - name: step_10
    steps:
      - name: Remove generated code
        rmdir: step_10
      - name: Update lib/main.dart
        path: patterns_codelab/lib/main.dart
        patch-u: |
          --- b/dart-patterns-and-records/step_10/lib/main.dart
          +++ a/dart-patterns-and-records/step_10/lib/main.dart
          @@ -59,14 +59,11 @@ class BlockWidget extends StatelessWidget {
             @override
             Widget build(BuildContext context) {
               TextStyle? textStyle;
          -    switch (block.type) {
          -      case 'h1':
          -        textStyle = Theme.of(context).textTheme.displayMedium;
          -      case 'p' || 'checkbox':
          -        textStyle = Theme.of(context).textTheme.bodyMedium;
          -      case _:
          -        textStyle = Theme.of(context).textTheme.bodySmall;
          -    }
          +    textStyle = switch (block.type) {
          +      'h1' => Theme.of(context).textTheme.displayMedium,
          +      'p' || 'checkbox' => Theme.of(context).textTheme.bodyMedium,
          +      _ => Theme.of(context).textTheme.bodySmall,
          +    };
           
               return Container(
                 margin: const EdgeInsets.all(8),
      - name: Build web app
        path: patterns_codelab
        flutter: build web
      - name: Copy step_10
        copydir:
          from: patterns_codelab
          to: step_10
      - name: Flutter clean
        path: patterns_codelab
        flutter: clean
  - name: step_11_a
    steps:
      - name: Remove generated code
        rmdir: step_11_a
      - name: Update lib/main.dart
        path: patterns_codelab/lib/main.dart
        patch-u: |
          --- b/dart-patterns-and-records/step_11_a/lib/main.dart
          +++ a/dart-patterns-and-records/step_11_a/lib/main.dart
          @@ -10,6 +10,19 @@ void main() {
             runApp(const DocumentApp());
           }
           
          +String formatDate(DateTime dateTime) {
          +  final today = DateTime.now();
          +  final difference = dateTime.difference(today);
          +
          +  return switch (difference) {
          +    Duration(inDays: 0) => 'today',
          +    Duration(inDays: 1) => 'tomorrow',
          +    Duration(inDays: -1) => 'yesterday',
          +    Duration(inDays: final days, isNegative: true) => '${days.abs()} days ago',
          +    Duration(inDays: final days) => '$days days from now',
          +  };
          +}
          +
           class DocumentApp extends StatelessWidget {
             const DocumentApp({super.key});
      - name: Build web app
        path: patterns_codelab
        flutter: build web
      - name: Copy step_11_a
        copydir:
          from: patterns_codelab
          to: step_11_a
      - name: Flutter clean
        path: patterns_codelab
        flutter: clean
  - name: step_11_b
    steps:
      - name: Remove generated code
        rmdir: step_11_b
      - name: Update lib/main.dart
        path: patterns_codelab/lib/main.dart
        patch-u: |
          --- b/dart-patterns-and-records/step_11_b/lib/main.dart
          +++ a/dart-patterns-and-records/step_11_b/lib/main.dart
          @@ -18,6 +18,9 @@ String formatDate(DateTime dateTime) {
               Duration(inDays: 0) => 'today',
               Duration(inDays: 1) => 'tomorrow',
               Duration(inDays: -1) => 'yesterday',
          +    Duration(inDays: final days) when days > 7 => '${days ~/ 7} weeks from now',
          +    Duration(inDays: final days) when days < -7 =>
          +      '${days.abs() ~/ 7} weeks ago',
               Duration(inDays: final days, isNegative: true) => '${days.abs()} days ago',
               Duration(inDays: final days) => '$days days from now',
             };
          @@ -43,13 +46,14 @@ class DocumentScreen extends StatelessWidget {
             @override
             Widget build(BuildContext context) {
               final (title, :modified) = document.metadata;
          +    final formattedModifiedDate = formatDate(modified);
               final blocks = document.getBlocks();
           
               return Scaffold(
                 appBar: AppBar(title: Text(title)),
                 body: Column(
                   children: [
          -          Text('Last modified: $modified'),
          +          Text('Last modified: $formattedModifiedDate'),
                     Expanded(
                       child: ListView.builder(
                         itemCount: blocks.length,
      - name: Build web app
        path: patterns_codelab
        flutter: build web
      - name: Copy step_11_b
        copydir:
          from: patterns_codelab
          to: step_11_b
      - name: Flutter clean
        path: patterns_codelab
        flutter: clean
  - name: step_12
    steps:
      - name: Remove generated code
        rmdir: step_12
      - name: Update lib/data.dart
        path: patterns_codelab/lib/data.dart
        patch-u: |
          --- b/dart-patterns-and-records/step_12/lib/data.dart
          +++ a/dart-patterns-and-records/step_12/lib/data.dart
          @@ -51,16 +51,32 @@ const documentJson = '''
           }
           ''';
           
          -class Block {
          -  final String type;
          -  final String text;
          -  Block(this.type, this.text);
          +sealed class Block {
          +  Block();
           
          -  factory Block.fromJson(Map<String, dynamic> json) {
          -    if (json case {'type': final type, 'text': final text}) {
          -      return Block(type, text);
          -    } else {
          -      throw const FormatException('Unexpected JSON format');
          -    }
          +  factory Block.fromJson(Map<String, Object?> json) {
          +    return switch (json) {
          +      {'type': 'h1', 'text': String text} => HeaderBlock(text),
          +      {'type': 'p', 'text': String text} => ParagraphBlock(text),
          +      {'type': 'checkbox', 'text': String text, 'checked': bool checked} =>
          +        CheckboxBlock(text, checked),
          +      _ => throw const FormatException('Unexpected JSON format'),
          +    };
             }
           }
          +
          +class HeaderBlock extends Block {
          +  final String text;
          +  HeaderBlock(this.text);
          +}
          +
          +class ParagraphBlock extends Block {
          +  final String text;
          +  ParagraphBlock(this.text);
          +}
          +
          +class CheckboxBlock extends Block {
          +  final String text;
          +  final bool isChecked;
          +  CheckboxBlock(this.text, this.isChecked);
          +}
      - name: Update lib/main.dart
        path: patterns_codelab/lib/main.dart
        patch-u: |
          --- b/dart-patterns-and-records/step_12/lib/main.dart
          +++ a/dart-patterns-and-records/step_12/lib/main.dart
          @@ -75,16 +75,18 @@ class BlockWidget extends StatelessWidget {
           
             @override
             Widget build(BuildContext context) {
          -    TextStyle? textStyle;
          -    textStyle = switch (block.type) {
          -      'h1' => Theme.of(context).textTheme.displayMedium,
          -      'p' || 'checkbox' => Theme.of(context).textTheme.bodyMedium,
          -      _ => Theme.of(context).textTheme.bodySmall,
          -    };
          -
               return Container(
                 margin: const EdgeInsets.all(8),
          -      child: Text(block.text, style: textStyle),
          +      child: switch (block) {
          +        HeaderBlock(:final text) => Text(
          +          text,
          +          style: Theme.of(context).textTheme.displayMedium,
          +        ),
          +        ParagraphBlock(:final text) => Text(text),
          +        CheckboxBlock(:final text, :final isChecked) => Row(
          +          children: [Checkbox(value: isChecked, onChanged: (_) {}), Text(text)],
          +        ),
          +      },
               );
             }
           }
      - name: Build web app
        path: patterns_codelab
        flutter: build web
      - name: Copy step_12
        copydir:
          from: patterns_codelab
          to: step_12
      - name: Flutter clean
        path: patterns_codelab
        flutter: clean
  - name: Cleanup
    rmdir: patterns_codelab
